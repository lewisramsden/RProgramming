p <- 0.9
(1+sqrt(1-(4*(1-p)*p)))/(2*(1-p))
(1-sqrt(1-(4*(1-p)*p)))/(2*(1-p))
p <- 0.6
(1-sqrt(1-(4*(1-p)*p)))/(2*(1-p))
(1+sqrt(1-(4*(1-p)*p)))/(2*(1-p))
val <- 0
X <- 0
X <- 0
p <- NA
X <- 0
Y <- rgeom(1, p)
p <- c()
X <- 0
Y <- rgeom(1, p)
Y <- rgeom(1, p)
Y <- rgeom(1, p)
p <- 0.8
Y <- rgeom(1, p)
X <- X + Y
X
p <- 0.6
X <- 0
Y <- rgeom(1, p)
X <- X + Y
X
p <- 0.7
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
X
rw <- X
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c()
X <- 0
X <- X + Y
i <- 1
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
whilst(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print("R =", mean(sims), "G =", min(c(p/(1-p),0)))
}
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
whilst(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print("R =", mean(sims), "G =", min(c(p/(1-p),0)))
}
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print("R =", mean(sims), "G =", min(c(p/(1-p),0)))
}
Rsim(100, 0.3)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print("R =", mean(sims))
}
Rsim(100, 0.3)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),0))))
}
Rsim(100, 0.3)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(100, 0.3)
Rsim(100, 0.1)
Rsim(100, 0.2)
Rsim(1000, 0.2)
Rsim(10000, 0.2)
Rsim(10000, 0.3)
Rsim(10000, 0.4)
Rsim(10000, 0.7)
Rsim(100, 0.6)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 100){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(100, 0.6)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 10){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k < k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(100, 0.5)
Rsim(1000, 0.5)
Rsim(100, 0.6)
Rsim(1, 0.6)
Rsim(10, 0.6)
X <- 10
k <- 3
X > 0 & k < 10
Rsim(10, 0.6)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 10){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k <- k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(10, 0.6)
Rsim(100, 0.6)
Rsim(1000, 0.6)
Rsim(10000, 0.6)
Rsim(10000, 0.8)
Rsim(10000, 0.8)
Rsim(100000, 0.8)
Rsim(100000, 0.6)
Rsim(100000, 0.52)
0.48/0.52
Rsim(100000, 0.48)
Rsim(1000, 0.48)
Rsim(1000, 0.2)
Rsim(10000, 0.2)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k <- k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(10000, 0.2)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 10000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k <- k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(10000, 0.2)
Rsim(10000, 0.1)
Rsim(10000, 0.5)
Rsim(10000, 0.6)
Rsim <- function(N, p){
sims <- c()
for(i in 1:N){
X <- 0
Y <- 1 - rgeom(1, p)
X <- X + Y
rw <- c(0,X)
k <- 1
while(X > 0 & k < 1000){
X <- X + 1 - rgeom(1,p)
rw <- c(rw, X)
k <- k + 1
}
sims <- c(sims, sum(rw == 1))
}
print(paste("R =", mean(sims), "G =", min(c(p/(1-p),1))))
}
Rsim(10000, 0.6)
Rsim(1000, 0.6)
Rsim(1000, 0.51)
Rsim(1000, 0.9)
Rsim(1000, 0.53)
Rsim(1000, 0.53)
Rsim(1000, 0.53)
5%/%3
4%/%3
6%/%3
8%/%3
9%/%3
((0.062*291)-(0.043*136))/(291-136)
((0.062*291)-(0.043*155))/(136)
a <- (3*0.7/0.3)*(3*(10000^2)/4)
b <- (3*0.7/(0.3^2))*((10000/2)^2)
a+b
sqrt(a+b)
(5000*35)/(4000*35)
5000*35
200*(1.04)^35
200*(1.04)^40
200*(1.05)^40
200*(1.1)^40
200*(1.5)^40
200*(1.05)^40
200*(1.06)^40
!TRUE
View(mtcars)
View(mtcars)
mtcars[,5]
(HP <- mtcars$hp)
mtcars[,1]
HP > 200
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
pi
pi > 3
pi < 4
pi > 3 & pi < 4
5 < 10 & 5 < 3
c(1,2,3) < c(2,3,4) & c(2,3,4) < c(3,4,5) # Think about this one a little!
c(1, 2, 3) < c(2, 3, 4) & "Red" == "Blue" # How has this worked? The left hand side is a 3 element vector
# In fact, this sort of logical/relational operation can also be computed on other objects than just numerical
# values, i.e. `character strings`
"Red" == "Red"
"Red" == "Blue"
"Red" == "red"
c(1, 2, 3) < c(2, 1, 4) & "Red" == "Red"
c(1, 2, 3) < c(2, 1, 4) && "Red" == "Red"
c(5, 2, 3) < c(2, 1, 4) && "Red" == "Red"
TRUE | TRUE
TRUE | FALSE
FALSE | TRUE
FALSE | FALSE
F | F | T | F #etc.
mtcars
mtcars$hp > 200 & mtcars$mpg <= 30 & mtcars$am == 1 & mtcars$cyl != 6
mtcars[length(mtcars)-1,]
mtcars[(length(mtcars)-1),]
length(mtcars)
nrow(mtcars)
mtcars[(nrow(mtcars)-1),]
x <- 8
if (x %% 2 == 0){
print("This number is even")
} else {
print("This number is odd")
}
x <- 14
if (x %% 2 == 0){
print(paste(x, "is an even number"))
} else {
print(paste(x,"is an odd number"))
}
if (x < 0) {
print(paste(x, "is a negative number"))
} else if (x > 0) {
print(paste(x, "is a positive number"))
} else {
print(paste(x, "is Zero"))
}
setwd("~/Documents/GitHub/lewisramsden.github.io")
